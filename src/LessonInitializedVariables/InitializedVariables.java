package LessonInitializedVariables;

public class InitializedVariables {
    public static void main(String[] args) {


        // ОБЪЯВЛЕНИЕ (ДЕКЛАРАЦИЯ) ПЕРЕМЕННОЙ

        // Данный урок будет о том, что такое объявление переменных и инициализация переменных
        // Мы уже не раз в этом курсе объявляли переменные и присваивали им значения
        // Пришло время дать формальные определения этим операциям

        // Обявление переменной

        // при обявлении переменной указывается тип переменной , а также ее название
        // приведем пример:
        int x;
        byte a;
        double b;

        // также вы можете встретить такую запись

        int y, n, m;

        // что равносильно следующей записи

//        int y;
//        int n;
//        int m;

        // если у вас имеется несколько переменных одного типа данных, то вы можете просто указать их через запятую
        // чаще всего такая запись менее понятна, но все же используется, и если вы увидите такую запись, пугаться не стоит
        // так делать можно.
        // Но так как в реальных проектах вы скорее всего НЕ будите называть переменные так как мы это делаем в этих уроках, ваши переменные будут
        // иметь какое то осмысленное название, чтобы ваш код могли читать другие программисты или же вы сами спустя какое то время
        // вот например такая запись может быть в проекте интернет магазина, при создании кода для каталога:

        int countFilterItem, numberCatalogItem, tmpSortId;

        // Лучше записать каждую переменную с новой строки, так как запись каждой переменной с новой строки располагает
        // к коментированию

        // Вот возможный пример обявления переменной в реальном проекте

//        int countFilterItem;    // Количество элементов в фильтре

        // Обявление переменной по другому называют Декларацией переменной, если вы от кого то услышите, что нужно задекларировать
        // переменную, то это значит что вы должны именно "объявить" переменную, указать ее тип, а потом имя
        // с объявлением думаю все понятно, идем дальше


        // ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННОЙ

        // Инициализация или присвоение значения переменной

        // Старайтесь инициализировать локальные переменные там, где они объявляются.
        // Единственной причиной не инициализировать переменную сразу может быть зависимость
        // изначального значения от каких-либо вычислений или условий, предшествующих инициализации

        // Инициализаци имеет следующий вид

        // название_переменной = значение_переменной;

        // при этом переменная и значение переменной должны иметь одинаковый тип
        // например

        int t;  // Задекларируем переменную
        t = 10; // Инициализируем переменную

        // Правильно писать так:

//        int t = 10;


        // У операции присваивания имеется одна интересная особенность, о которой вам будет полезно знать:
        // возможность создания цепочки операций присваивания.
        int h, k, l;
        h = k = l = 100;   // Присвоить значение 100 трем переменным.
        // В данном случае мы всем трем переменным присвоили значение 100


        // Также в java существуют составные операции присваивания
        // Например:

        int p = 0;

        // Теперь напишем оператор присваивания
        p = p + 10;

        // Такой пример можно записать в более компактной форме
        p += 10;

        // Знак операции += указывает на то, что переменной "p" должно быть присвоено ее первоначальное значение, увеличенное на 10.

        // Расмотрим еще одиин простой пример
        int g = 0;
        g = g - 10;
        g -= 10;

        // Как вы уже догадались оператор -= указывает на то, что переменной "g" должно быть присвоено ее первоначальное значение,
        // уменьшенное на 10

        // Для всех бинарных операций, т.е. операций, требующих наличия двух операндов(показать на примере с переменной "g"), в
        // Java предусмотрены соответствующие составные операторы присваивания. Общая форма всех этих операций имеет следующий вид:

        // переменная ор = выражение;
        // где ор - арифметическая или логическая операция, применяемая совместно с операцией присваивания.

        // ПОКАЗАТЬ ПРЕЗЕНТАЦИЮ

        // Каждая из перечисленных выше операций представляется знаком соответствующей
        // операции и следующим за ним знаком равенства, что и дало им название "составные".





    }
}
